import React, { useState } from "react";
import { Table, Button, Card, Form, Breadcrumb } from "react-bootstrap";
import { Link } from "react-router-dom";

const TaskReport = () => {
  const [searchQuery, setSearchQuery] = useState("");

  const tasks = [
    {
      id: "001",
      name: "UI Design",
      submittedBy: "Jeremy Neigh",
      estimatedTime: "4h",
      spentTime: "3h 50m",
      efficiency: "Enough",
    },
  ];

  // this for calculate the difference between estimated and spent time
  const calculateDifference = (estimated, spent) => {
    const estimatedParts = estimated.split("h");
    const estimatedHours = parseInt(estimatedParts[0]);
    const estimatedMinutes = estimatedParts[1]
      ? parseInt(estimatedParts[1])
      : 0;

    const spentParts = spent.split("h");
    const spentHours = parseInt(spentParts[0]);
    const spentMinutes = spentParts[1] ? parseInt(spentParts[1]) : 0;

    const totalEstimatedMinutes = estimatedHours * 60 + estimatedMinutes;
    const totalSpentMinutes = spentHours * 60 + spentMinutes;

    const difference = totalEstimatedMinutes - totalSpentMinutes;

    const absDifference = Math.abs(difference);
    const hours = Math.floor(absDifference / 60);
    const minutes = absDifference % 60;

    return difference > 0 ? `+${hours}h ${minutes}m` : `-${hours}h ${minutes}m`;
  };

  // filter task using search
  const filteredTasks = tasks.filter((task) =>
    task.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  // this converts table data to CSV and initiates download
  const handleDownload = () => {
    const csvRows = [];

    // set table headers
    const headers = [
      "Task ID",
      "Task Name",
      "Submitted By",
      "Estimated Time",
      "Spent Time",
      "Difference",
      "Efficiency",
    ];
    csvRows.push(headers.join(","));

    // set table rows
    filteredTasks.forEach((task) => {
      const difference = calculateDifference(
        task.estimatedTime,
        task.spentTime
      );
      const row = [
        task.id,
        task.name,
        task.submittedBy,
        task.estimatedTime,
        task.spentTime,
        difference,
        task.efficiency,
      ];
      csvRows.push(row.join(","));
    });

    // convert rows to CSV format
    const csvString = csvRows.join("\n");
    const blob = new Blob([csvString], { type: "text/csv" });

    // Create download link
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);
    link.download = "task_report.csv";

    // this trigger download
    link.click();
  };

  return (
    <div>
      <div className="d-flex justify-content-between align-items-center ">
        <Breadcrumb className="mr-4 d-flex align-items-center">
          <Breadcrumb.Item linkAs={Link} linkProps={{ to: "/" }}>
            HRM
          </Breadcrumb.Item>
          <Breadcrumb.Item linkAs={Link} linkProps={{ to: "/task" }}>
            Time Management
          </Breadcrumb.Item>
          <Breadcrumb.Item active className="fs-5">
            Task Report
          </Breadcrumb.Item>
        </Breadcrumb>
        <Form.Control
          type="text"
          placeholder="search task..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          style={{ width: "300px", marginLeft: "20px" }}
        />
      </div>
      <Card className="p-4 mt-2">
        <div className="d-flex justify-content-between align-items-center mb-3">
          <h5 className="text-blue-800">Completed Tasks</h5>
        </div>

        <Table bordered hover responsive>
          <thead>
            <tr>
              <th>Task ID</th>
              <th>Task Name</th>
              <th>Submitted By</th>
              <th>Estimated Time</th>
              <th>Spent Time</th>
              <th> Difference</th>
              <th>Efficiency</th>
            </tr>
          </thead>
          <tbody>
            {filteredTasks.map((task) => {
              const difference = calculateDifference(
                task.estimatedTime,
                task.spentTime
              );
              return (
                <tr key={task.id}>
                  <td>{task.id}</td>
                  <td>{task.name}</td>
                  <td>{task.submittedBy}</td>
                  <td>{task.estimatedTime}</td>
                  <td>{task.spentTime}</td>
                  <td>{difference}</td>
                  <td>{task.efficiency}</td>
                </tr>
              );
            })}
          </tbody>
        </Table>

        <div className="d-flex justify-content-end align-items-center mt-3">
          <Button variant="primary" onClick={handleDownload}>
            Download Report
          </Button>
        </div>
      </Card>
    </div>
  );
};

export default TaskReport;
